# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml

#    - name: Publish to GitHub Packages Apache Maven
#      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
#      env:
#        GITHUB_TOKEN: ${{ github.token }}
    - run: mvn clean package -DskipTests
      #    - run: mkdir staging && mv target/hendi-workload-sim.jar target/hendi-workload-sim-${{ env.build-number }}.jar && cp target/*.jar staging
    - name: Copy Jar file
      run: mv target/$(ls target) app.jar

    - run: cp target/*.jar staging

    - uses: actions/upload-artifact@v3
      with:
        name: jar-file
        path: app.jar
        retention-days: 1

  #    - name: Copy Jar file
  #      run: mv target/*.jar

  #    - uses: actions/upload-artifact@master
  #      with:
  #        name: jar-file
  #        path: app.jar

  build-image:
    runs-on: ubuntu-latest
    needs: build

    steps:

      - uses: actions/checkout@v3

      - uses: actions/download-artifact@master
        with:
          name: jar-file
          path: app.jar

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set env
        run: echo "DATE=$(date +%s)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: hendisantika/client-app:${{ env.DATE }}
